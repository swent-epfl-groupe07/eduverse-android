name: Android CI - Test

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  android-ci:
    name: Android CI
    runs-on: ubuntu-latest

    env:
      app_name: Eduverse
      

    defaults:
      run:
        working-directory: ./${{ env.base_folder }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0  # Needed for a more complete Sonar analysis

      # Step 2: Remove current Gradle cache to avoid caching issues
      - name: Remove current gradle cache
        run: rm -rf ~/.gradle

      # Step 3: Set up JDK (Java 17)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      # Step 4: Install Android SDK components
      - name: Install Android SDK and tools
        run: |
          sudo apt-get update
          sudo apt-get install -y lib32stdc++6 qemu-kvm
          mkdir -p "$ANDROID_HOME"
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "emulator" "system-images;android-34;google_apis;x86_64" "build-tools;34.0.0"
      
      # Step 5: Cache Gradle for faster builds
      - name: Retrieve Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      # Step to decode secrets
      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties


      # Step 6: Grant execution permissions for the Gradle wrapper
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Step 7: Build the Android app
      - name: Build Android app
        run: ./gradlew assembleDebug lint --parallel --build-cache

      # Step 8: Run unit tests
      - name: Run Unit Tests
        run: ./gradlew check --parallel --build-cache

      # Step 9: Configure and Run Android Emulator
      - name: Create AVD
        run: echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n github_emulator -k "system-images;android-34;google_apis;x86_64" --device "pixel"

      - name: Install Emulator System Image
        run: sdkmanager --install "system-images;android-34;google_apis;x86_64"

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          avd-name: github_emulator
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -skin 1080x1920
          disable-animations: true
          script: ./gradlew connectedCheck --parallel --build-cache


      # Step 10: Generate the coverage report for tests
      - name: Generate Test Coverage
        run: ./gradlew jacocoTestReport

      # Step 11: Upload the test coverage report
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: Coverage report
          path: app/build/reports/jacoco/jacocoTestReport
